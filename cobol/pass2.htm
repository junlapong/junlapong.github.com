<html>

<!-- Mirrored from cptd.chandra.ac.th/selfstud/cobol/pass2.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 16 Nov 2015 19:29:52 GMT -->
<head>
<title>pass2</title>
<meta charset="utf-8" />
</head>
<body bgcolor="#FFFFFF" text="#0000ff">
<TABLE BORDER = 0 align="center">
     <TR><Td width=80><A HREF="main.htm"><IMG SRC="main.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass1.htm"><IMG SRC="pass1.jpg" Border=0></A></Td>
          <Td width=80><a name="<IMG SRC="pass1.jpg"><IMG SRC="pass2.jpg" Border=0></a></Td>
          <Td width=80><A HREF="pass3.htm"><IMG SRC="pass3.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass4.htm"><IMG SRC="pass4.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass5.htm"><IMG SRC="pass5.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass6.htm"><IMG SRC="pass6.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass7.htm"><IMG SRC="pass7.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass8.htm"><IMG SRC="pass8.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass9.htm"><IMG SRC="pass9.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass10.htm"><IMG SRC="pass10.jpg" Border=0></A></Td>
</TR>
    </TABLE>
<center>
<h3>บทที่2<br>ความรู้เบื่องต้นเกี่ยวกับภาษา COBOL</h3>
</center>
<dl>
<dt>
<dd><IMG SRC="drosball.gif"><a href="#ประวัติภาษาโคบอล">ประวัติภาษาโคบอล</a>
<dd><IMG SRC="drosball.gif"><a href="#ส่วนประกอบของโปรแกรม ภาษาโคบอล">ส่วนประกอบของโปรแกรม ภาษาโคบอล</a>
<dd><IMG SRC="drosball.gif"><a href="#สัญลักษณ์ ที่ใช้ในภาษาโคบอล">สัญลักษณ์ ที่ใช้ในภาษาโคบอล</a>
<dd><IMG SRC="drosball.gif"><a href="#ประเภทของคำ">ประเภทของคำ</a>
<dd><IMG SRC="drosball.gif"><a href="#ตัวแปร และ ค่าคงที่">ตัวแปร และ ค่าคงที่</a>
<dd><IMG SRC="drosball.gif"><a href="#แบบฟอร์ม สำหรับการเขียนโปรแกรม">แบบฟอร์ม สำหรับการเขียนโปรแกรม COBOL (COBOL CODING FORM)</a>
<dd><IMG SRC="drosball.gif"><a href="#การใช้เครื่องหมายวรรคตอน">การใช้เครื่องหมายวรรคตอน</a>
</dl>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ภาษาโคบอล จัดเป็นภาษาระดับสูง(High - Level Language) ซึ่งคำว่า COBOL ย่อมาจากคำว่า 
  &quot;Common Business Oriented Language&quot; ซึ่งภาษาโคบอล เป็นภาษาที่ถูกพัฒนาขึ้นเพื่อใช้งานด้านการประมวลผลในทางธุรกิจโดยเฉพาะ 
  เป็นภาษาที่มีความใกล้เคียงกับภาษาอังกฤษมากที่สุด ซึ่ง Source Program สามารถในไปใช้เป็นเอกสารประกอบโปรแกรมได้ 
  เพราะมีความละเอียดพอที่จะอ่านโปรแกรมได้อย่างเข้าใจ ภาษาโคบอลเป็นภาษาที่ไมเหมาะสำหรับผู้ที่เริ่มศึกษาคอมพิวเตอร์ศาสตร์ 
  เนื่องจากเป็นภาษาที่ค่อนข้างจะยาก และมีกฏเกณฑ์ต่าง ๆที่ยุงยากอยู่มิใช้น้อย ผู้ที่ต้องการจะศึกษาการเขียนโปรแกรมภาษาโคบอล ควรจะมีความรู้ในเรื่องของการประมวลผลข้อมูลเป็นอย่างดี  และจะต้องศึกษาหรือมีความรู้พื้นฐานทางด้านคอมพิวเตอร์ศาสตร์อยู่มากพอสมควร</p>



<table bgcolor="ffff00" border=0 width=800 aling="center">
<tr>
<td>
<font size=+1>
<b><a name="ประวัติภาษาโคบอล">ประวัติภาษาโคบอล</a>
</b>
</font>
</td>
</tr>
</table>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ภาษาโคบอลได้ถือกำเนิดขึ้นเมื่อปี ค.ศ.1959 โดยได้มีการร่วมมือกันจัดตั้งคณะกรรมการขึ้นชุดหนึ่งให้ชื่อว่า CODASYL : Conference On DAta SYstems Languages ซึ่งมีทั้งภาครัฐบาล และภาคเอกชนกลุ่มผู้ผลิตเครื่องคอมพิวเตอร์ในยุคนั้น ซึ่งได้ร่วมมือกันพัฒนาขึ้นเพื่อให้สามารถนำมาใช้กัน และให้เหมาะสมกับการประมวลผลข้อมูลทางด้านธุรกิจ ซึ่งได้ทำงานสรุปเป็นผลสำเร็จในปี ค.ศ. 1960 และให้ชื่อภาษาที่ได้สร้างขึ้นใหม่นี้ว่า "COBOL-60" และต่อมาภายหลังก็ได้มีการปรับปรุงแก้ไขพัฒนาภาษาโคบอลให้ทันต่อยุคต่อเหตุการณ์ ซึ่งมีการแก้ไขปรับปรุงขึ้นในปี ค.ศ. 1961 ซึ่งเรียกว่า "COBOL-61" ต่อมาได้มีการปรับปรุงแก้ไขเพิ่มเติมขึ้นอีกเล็กน้อย ในปี ค.ศ. 1963 และต่อมาในปี ค.ศ. 1965 และต่อมาในปี ค.ศ. 1968 ภาษาโคบอลได้ถูกยกระดับไห้เป็นภาษามาตราฐาน  โดยสถาบัน The American National Standards Institute : ANSI โดยกำหนดภาษาโคบอลที่มีใช้กันอยู่ในขณะนั้นให้เป็นมาตราฐานเป็นอย่างเดียวกัน โดยแยกออกเป็นหลายระดับ และให้ยึดถือ COBOL-65 เป็นหลัก การใช้ภาษาโคบอลได้รับความนิยมแพร่หลายขึ้นในปี ค.ศ. 1970 เนื่องจากภาษาโคบอลได้มีการกำหนดความเป็นมาตราฐานขึ้น และได้มีการพัฒนาภาษาไปพร้อม ๆ กับการพัฒนาตัว Compiler ให้มีประสิทธิภาพมากยิ่งขึ้น</p>


<h4>ในการเขียนโปรแกรมภาษาโคบอลเราจะแบ่งออกเป็นส่วน ๆ ดังนี้</h4>
<ol>
<li>ส่วนประกอบของโปรแกรม ภาษาโคบอล
<li>สัญลักษณ์ ที่ใช้ในภาษาโคบอล
<li>ประเภทของคำ
<li>ตัวแปร และ ค่าคงที่
<li>แบบฟอร์ม สำหรับการเขียนโปรแกรม COBOL (COBOL CODING FORM)
<li>การใช้เครื่องหมายวรรคตอน
</ol>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>


<table bgcolor="ffff00" border=0 width=800 aling="center">
<tr>
<td>
<font size=+1>
<b>1. <a name="ส่วนประกอบของโปรแกรม ภาษาโคบอล">ส่วนประกอบของโปรแกรม COBOL</a>
</b>
</font>
</td>
</tr>
</table>

<center>
<TABLE BORDER>
     <TR>
          <TD>IDENTIFICATION DIVISION</TD>
          <TD>
<ul>
<li>ชื่อโปรแกรม
<li>ชื่อผู้เขียนโปรแกรม
<li>วันที่เขียนโปรแกรม
</ul>
</TD>
     </TR>
     <TR>
          <TD>ENVIRONMENT DIVISION</TD>
          <TD>
<UL>
<LI>รายละเอียดของตัวเครื่อง(CONFIGURATION SECTION)
<LI>รายละเอียดสิ่งที่ใช้ในการบันทึกข้อมูล(INPUT/OUTPUT SECTION)
</UL>
</TD>
     </TR>
     <TR>
          <TD>DATA DIVISION</TD>
          <TD>
<UL>
<LI>รายละเอียดของแฟ้มข้อมูล(FILE SECTION)
<LI>รายละเอียดของข้อมูลอื่น ๆ(WORKING-STORAGE SECTION)
<LI>รายละเอียดของข้อมูลที่รับมาจากโปรแกรมอื่น ๆ(LINKAGE SECTION)
<LI>รายละเอียดของข้อมูลที่ให้แสดงบนจอภาพ<SCREEN SECTION>
</UL></TD>
     </TR>
     <TR>
          <TD>PROCEDURE DIVISION</TD>
          <TD>
<UL>
<LI>PARAGRAPH 1
<LI>PARAGRAPH 2
<LI>PARAGRAPH 3-------[STATEMENT I;I' = 1(N)1
</UL>
</TD>
     </TR>
    
</TABLE>
</center>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ไดอะแกรมแสดง โครงสร้างโปรแกรมภาษาโคบอล
จากไดอะแกรม  ที่แสดงโครงสร้างของโปรแกรมภาษาโคบอลจะเห็นว่า ได้แบ่งตัวโปรแกรมออกเป็น 4 ส่วน ในแต่ละส่วนเราเรียกว่า Division<br> 
ในแต่ละ Division มีชื่อดังต่อไปนี้</p>
<ul>
<li>IDENTIFICATION DIVISION.
<LI>ENVIRONMENT DIVISION.
<LI>DATA DIVISION.
<LI>PROCEDURE DIVISION.
</uL>
<p><b>IDENTIFICATION DIVISION</b> เป็น Division หรือส่วนที่ใช้ในการแสดงรายละเอียดของตัวโปรแกรม  ชื่อของผู้เขียนโปรแกรม วันที่เริ่มเขียนโปรแกรม วันที่แปลโปรแกรม(Compiler) และที่สำคัญบอกว่าโปรแกรมนี้ชื่ออะไร</p>
<p><b>ENVIRONMENT DIVISION</b> เป็น Division หรือส่วนที่ใช้ในการแสดงรายละเอียดของตัวโปรแกรมเกี่ยวกับตัวเครื่องคอมพิวเตอร์ที่ใช้ในการเขียนโปรแกรม หรือสั่งให้โปรแกรมทำงาน และบอกให้ทราบชนิดของ Input/Output Devision ที่จะนำมาใช้กับโปรแกรมนี้</p>
<p><b>DATA DIVISION</b> เป็น Division หรือส่วนที่ใช้ในการแสดงรายละเอียดลักษณะของข้อมูลทุก ๆ ตัวที่นำมาเกี่ยวข้องกันกับโปรแกรมนี้ทั้งหมด ไม่ว่าจะเป็นข้อมูลที่เป็ฯ Input หรือ Output หรือผลลัพธ์ที่เกิดจากการประมวลผล หรือผลลัพธ์จากการทำงานของโปรแกรมนี้ โดยจะแสดงโครงสร้างของข้อมูลอย่างละเอียด</p>
<p><b>PROCEDURE DIVISION</b> เป็น Division หรือส่วนที่ใช้ลำดับขั้นตอนของการทำงาน หรือของการประมวลผลข้อมูลโดยโปรแกรมชุดนี้  และใน Division นี้เราจะเขียนขึ้นตามผังโปรแกรมที่เราได้เขียนขึ้นในขั้นตอนแรกก่อนลงมือเขียนโปรแกรมนี้ ภายใน Division นี้จะแตกต่างไปจาก 3 Division แรกที่ได้กล่าวมา โดยจะมีการคำนาณ หรือมีคำสั่งต่าง ๆ ที่สั่งให้เครื่องคอมพิวเตอร์ทำงาน  เพื่อให้ได้ผลลัทธ์ออกมาตามที่เราต้องการ</p>
<p>นอกจากภาษาโคบอลได้ถูกจัดแบ่งออกเป็นส่วนใหญ่ ๆ (Division) แล้ว ภายในแต่ละ Division ยังถูกแบ่งออกเป็น Section ย่อย ๆ ได้อีก เช่น ภายใน Environment Division จะต้องมีอย่างน้อย 2 Section คือ  Configuration Section และ Input-Output Section และภายใน Data Division จะมี  File Section และ Working-Storage Section ส่วนภายใน Procedure Division จะมี Section เท่าไหร่ก็ได้ หรือภายในส่วนของ Identification Division ไม่มี Section อยู่เลย</p> 
<p>นอกจากนี้ภายในแต่ละ Section จะมี Paragraph แตกย่อยลงไปอีก ซึ่ง Paragraph เป็นส่วนประกอบภายใน Section ในทุก  Section และภายใน Section จะต้องมี Paragraph อย่างน้อย 1 Paragraph แต่ถ้าหากว่าภายใน Division ใดไม่ได้แบ่งส่วนประกอบออกเป็น Section ให้ถือว่า Paragraph นั้นเป็นส่วนประกอบโดยตรงของภายใน Division นั้น </p>
<p><b>Sentence</b> เป็นรูปของประโยคภายในของถาษาโคบอล ซึ่งมีลักษณะคล้ายกับประโยคภายในภาษาอังกฤษ ซึ่งภายในประโยค หรือ Sentence นี้ต้องมีคำกริยา (verb) อย่างน้อย 1 คำ Sentence ภายในภาษาโคบอลนั้นจะต้องจบลงด้วย"."(Period)</p>
<p><b>Statement</b> คือกลุ่มของตัวเลข กลุ่มของตัวอักษร และรวมถึงสัญลักษณ์พิเศษต่าง ๆ ซึ่งนำมาประกอบกันให้ได้ความหมายเป็นคำสั่งตามรูปแบบเงื่อนไขที่ภาษากำหนดขึ้นให้ใช้(Reserved Words) โดยอาจจะมีการผสมอักระกันเป็น 1 Statement แล้วนำมาผูกกันเป็นกลุ่มของคำสั่ง เพื่อสั่งให้เครื่องคอมพิวเตอร์ทำงานให้ได้ผลลัพธ์ตามที่ต้องการ</p>
<p><b>Clause</b> คือกลุ่มของ Characters (อักขระ) และ Words เพื่อใช้สำหรับอธิบายถึง Entry ภายในโปรแกรมนั้น ๆ</p>
<p><b>Word</b> คือกลุ่มของ Characters ซึ่งจะต้องมีอย่างน้อย 1 ตัวอักขระขึ้นไป ซึ่งโครงสร้างของ Word ได้อธิบายไว้แล้วข้างต้น</p>
<p><b>Character</b> ตัวอักขระ เป็นหน่วยที่เล็กที่สุดในโปรแกรมภาษาทางคอมพิวเตอร์ ดูรายละเอียดภายในหัวข้อเรื่อง สัญลักษณ์ในภาษา COBOL </p>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>


<table bgcolor="ffff00" border=0 width=800 aling="center">
<tr>
<td>
<font size=+1>
<b><b>2. <a name="สัญลักษณ์ ที่ใช้ในภาษาโคบอล">สัญลักษณ์ในภาษา COBOL (มี 51 ตัว)</a></b>
</font>
</td>
</tr>
</table>
 <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Character (อักขระ) หมายถึง ตัวเลขและเครื่องหมายต่าง ๆ ที่เครื่องคอมพิวเตอร์รับได้ในรูปของ ASCII CODE หรือ เลขฐาน 16 (แล้วแต่ระบบการเก็บข้อมูล ภายในหน่วยความจำของแต่ละเครื่องฯ) ซึ่งใช้ประกอบขึ้นเป็นคำ (Word) ในการเขียนเป็นภาษาโปรแกรม ซึ่งประกอบด้วย</p>
<ul>
<li>ชุดอักษร(Alphabetic) "A...Z"
<li>ชุดตัวเลข(Numeric) "0..9"
<li>ชุดสัญลักษณ์พิเศษ(Special Character){+ - * / . ** $ * > < = ( ) " ' ; _ }
</ul>
<b>2.1 ชุดอักษร(Alphabetic) "A...Z"</b>
ใช้ในการสร้าง (Word) เพื่อตั้งชื่อให้กับตัวแปร(Variable Name Identifier) และตั้งชื่อให้กับแฟ้มข้อมูล (Identification ,Program Name, Program ID) ในโปรแกรมภาษาโคบอล โดยจะตั้งชื่อให้ซ้ำกับ Reserved Words ไม่ได้ และจะตั้งชื่อตัวแปรเกิน 30 ตัวอักษรไม่ได้ และ ตั้งชื่อของแฟ้มข้อมูลทุกประเภทที่ใช้ในการเขียนโปรแกรมภาษาโคบอล เกิน 8 ตัวอักษรไม่ได้ และในการติดตั้งชื่อแฟ้มข้อมูล หรือตั้งชื่อให้กับตัวแปร อาจจะมีตัวอักขระปะปนตัวเลขก็ได้ แต่จะใช้ตัวอักขระพิเศษมาผสมด้วยไม่ได้ จะอนุโลมให้ใช้ "_"(Hyphen) ได้เฉพาะในภาษาโคบอลเพียงเท่านั้น และในการตั้งชื่อให้กับตัวแปร หรือ ชื่อแฟ้มข้อมูลจะขึ้นต้น หรือนำหน้าด้วยตัวเลข หรือ Hyphen ไม่ได้<br>
<b>2.2 ชุดตัวเลข (Numeric)"0..9"</b>
ใช้ในการกำหนดค่าให้กับตัวแปร เพื่อนำไปทำการคำนวณหาค่าต่าง ๆ ที่เป็นผลลัพธ์ตามที่เราต้องการ หรือ อาจจะใช้ผสมกับกลุ่มตัวอักษรให้กับตัวแปร หรือใช้ตั้งชื่อแฟ้มข้อมูล<br>
<b>2.3 ชุดสัญลักษณ์พิเศษ (Special Character)</b>
ชุดสัญลักษณ์พิเศษ เราสามารถแบ่งออกได้ตามหน้าที่ดังนี้<br>
<b>ใช้ในการคำนวณ เราเรียกว่า Arithmetic Operator</b>

<center>
<table border=1>
<tr>
<td>+(บวก) </td><td>/ (หาร)</td>
</tr>
<tr>
<td>-(ลบ)</td><td>** (ยกกำลัง)</td>
</tr>
<tr>
<td>* (คูณ) </td><td>( ) (เครื่องหมายวงเล็บ)</td>
</tr>
</table>
<b>ใช้ในการเปรียบเทียบ ในเชิงคณิตศาสตร์ Relation operator</b>
<table border=1>
<tr>
<td>> มากกว่า </td><td>or IS GREATER THAN</td>
</tr>
<tr>
<td>< น้อยกว่า</td><td>or IS LESS THAN</td>
</tr>
<tr>
<td>=  เท่ากับ </td><td>or IS EQUAL</td>
</tr>
</table>
<b>ใช้ในการกำกับ การเว้นวรรคตอน Punctuation Operator</b>
<p>{ - , . " : ; () }</p>
<b>ใช้ในการกำหนดรูปแบบของการพิมพ์ (Print Format)</b>
<table border=1>
<tr>
<td>B (Blank Or Space) V</td><td>V (Period for format Decimal)</td>
</tr>
<tr>
<td>Z</td><td>,</td>
</tr>
<tr>
<td>$</td><td>B</td>
</tr>
<tr>
<td>+</td><td>CR</td>
</tr><tr>
<td>-</td><td>DB</td>
</tr><tr>
<td>0</td><td>.</td>
</tr><tr>
<td>*</td><td>Space</td>
</tr>
</table>
</center>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>


<table bgcolor="ffff00" border=0 width=800 aling="center">
<tr>
<td>
<font size=+1>
<b>3. <a name="ประเภทของคำ">ประเภทของคำ </a>(Types Of Words)
</b>
</font>
</td>
</tr>
</table>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; คำ เกิอขึ้นจากการผสมระหว่างตัวอักษร กับตัวเลข หรือจะเป็นตัวอักษรล้วน ๆ ก็ได้ ซึ่งจะต้องเป็นไปตามเงื่อนไขหรือกฎเกณฑ์ของภาษานั้น ๆ ดังได้กล่าวมาแล้วข้างต้น ซึ่งแบ่งออกเป็นประเภท ใหญ่ ๆ ดังนี้</p>
<ul>
<li>3.1 คำสงวน (Reserved Word) คำสงวนไว้ใช้ในกรณี ๆ ไปโดยเฉพาะ ไม่สามารถนำคำสงวนไปใช้ในหน้าที่อื่น ๆ ที่ไม่ใช่หรือ ไม่ได้กำหนดไว้ โดยคำสงวนจะมีความหมายในตัวของมันเอง ซึ่งแบ่งออกเป็น 3 ประเภท
<ul>
<li>Key word คือคำที่เราต้องเขียนเสมอ หรือ เป็นคำที่ตัว Compiler Cobol รู้จัก ได้แก่ Read , Into, End
<li>Option Word จะใช้ หรือ ไม่ใช้ก็ได้ เขียนแทนด้วยตัวอักษรตัวพิมพ์ใหญ่ แต่ไม่มีขีดเส้นใต้กำกับไว้ มีไว้เพื่อขยายประโยคให้สมบูรณ์ เช่น Record, At
<li>Connective Word เพื่อขยายใจความประโยคหรือเชื่อมโยงคำ เช่น Of ,In
</ul>
<li>3.2 คำที่ไม่ใช่คำสงวน หมายถึงคำอื่น ๆ ซึ่งผู้เขียนโปรแกรม ตั้งชื่อขึ้นเองตามกฏเกณฑ์การตั้งชื่อ ในภาษาโคบอลห้ามตั้งชื่อตรงกับคำสงวนหรือซ้ำคำสงวน
<ul>
<li>Data Name ใช้อ้างอิงถึงข้อมูล หรือตัวแปร
<li>Condition Name ชื่อข้อมูลที่ใช้ในการสร้างเงื่อนไขขึ้นเพื่อเลือกตัดสินใจในการทำงาน และเพื่อทดสอบโปรแกรม
<li>Paragraph Name หมายถึง ชื่อหัวข้อของชุดคำสั่งที่ปรากฏอยู่ในส่วนต่าง ๆของโปรแกรม
</ul>
<li>3.3 Special Name ชื่อพิเศษต้องอยู่ในพารากราฟทึ่ชื่อ Special Names ซึ่งอยู่ภายใน Environment Division ซึ่งผู้เขียนโปรแกรมจะเป็นผู้ตั้งขึ้นเองเพื่อนำไปใช้ประโยชน์ในการเขียนโปรแกรมให้สั้น และรัดกุม แต่มีประสิทธิภาพมากขึ้น
</ul>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>

<table bgcolor="ffff00" border=0 width=800 aling="center">
<tr>
<td>
<font size=+1>
<b>4. <a name="ตัวแปร และ ค่าคงที่">ตัวแปร(Variable) และ ค่าคงที่ (Literal)</a>
</b>
</font>
</td>
</tr>
</table>
<ul>
<li>4.1 ตัวแปร หมายถึง ข้อมูลที่มีการเปลี่ยนแปลงค่อยู่ตลอดเวลาในโปรแกรม
<ul>
<li>ตัวแปรชนิดตัวเลข (Numeric variable) ประกอบไปด้วยตัวเลข 0 - 9 สามารถนำไปคำนวณได้
<li>ตัวแปรชนิดอักขระ (Alphabetic variable) ประกอบไปด้วยตัวอักษร A..Z  และ Blank Or Space และ  Hyphen (-)
<li>ตัวแปรชนิดที่เป็นทั้งตัวเลขและตัวอักขระ  (Alphabumeric variable)ได้แก่ตัวเลข ตัวอักษร สัญลักษณ์พิเศษ
</ul>
<li>4.2 ค่าคงที่ (Literal)</h4>ค่าคงที่เป็นตัวเลข(Numeric Literal) ประกอบด้วยตัวเลข 0-9
</ul>


<table bgcolor="ffff00" border=0 width=800 aling="center">
<tr>
<td>
<font size=+1>
<b><a name="แบบฟอร์ม สำหรับการเขียนโปรแกรม">แบบฟอร์ม ของกระดาษเขียนโปรแกรม </a></b>
</font>
</td>
</tr>
</table>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ในการเขียนโปรแกรมด้วยภาษาใด ๆ ก็ตาม จำเป็นต้องเขียนลงในกระดาษ ตามแบบฟอร์มซึ่งแต่ละภาษากำหนดเอาไว้ ภาษาโคบอล ก็เช่นกัน เราต้องเขียนโปรแกรมลงในกระดาษสำหรับเขียนโปรแกรมโดยเฉพาะ กระดาษพิเศษที่ใช้เขียนโปรแกรมภาษาโคบอลนี้เรียกว่า Cobol Coding Form รูปแบบนี้ เหมือนรูปแบบมาตราฐานของบัตร 80 คอลัมน์ คือ ในกระดาษหนึ่งบรรทัดแบ่งออกเป็น 80 คอลัมน์ เช่นเดียวกันและกระดาษเขียนโปรแกรมหนึ่งแผ่น  จะมีประมาณ 20 บรรทัด อย่างไรก็ตามทุกวันนี้เรามักจะส่งโปรแกรมเข้าเครื่องคอมพิวเตอร์ทางจอภาพมากกว่า
รายละเอียดของหัวกระดาษตอนบน
<ol>
<li>System ให้ใส่รายละเอียดของระบบที่ใช้ในการเขียนโปรแกรม หรือ รายละเอียดของเครื่องคอมพิวเตอร์ที่ใช้ หรืออาจจะเป็นชื่อระบบก็ได้
<li>Program ให้ใส่ชื่อโปรแกรม หรืออาจจะเป็นชื่อของโปรแกรมย่อยก็ได้
<li>Programmer ใส่ชื่อโปรแกรมเมอร์หรือชื่อของผู้เขียนโปรแกรม
<li>Date  ใส่วัน เดือน ปี ที่เขียนโปรแกรม
<li>Page of ให้ใส่ตัวเลขบอกจำนวนหน้า จำนวนตัวเลขหลัง OF หมายถึงจำนวน Coding Sheet ทั้งหมดที่ใช้เขียนโปรแกรมนี้ และตัวเลขหลัง Page หมายถึง เลขบอกหน้าของ Coding Sheet
</ol>


<table bgcolor="ffff00" border=0 width=800 aling="center">
<tr>
<td>
<font size=+1>
<b><a name="การใช้เครื่องหมายวรรคตอน">การใช้เครื่องหมายวรรคตอน(Punctuation)</a>
</b>
</font>
</td>
</tr>
</table>
จุดประสงค์ ของการใช้เครื่องหมายวรรคตอนเพื่อบอกให้ Compiler ทราบว่าจบประโยคเมื่อไหร่ จบคำเมื่อไหร่ และช่วยในการอ่านโปรแกรมได้ง่ายขึ้น<br>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>
</body>

<!-- Mirrored from cptd.chandra.ac.th/selfstud/cobol/pass2.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 16 Nov 2015 19:29:52 GMT -->
</html>
