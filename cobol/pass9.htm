<html>

<!-- Mirrored from cptd.chandra.ac.th/selfstud/cobol/pass9.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 16 Nov 2015 19:29:52 GMT -->
<head>
<title>pass9</title>
<meta charset="utf-8" />
</head>
<body bgcolor="#FFFFFF" text="#0000ff">
<TABLE BORDER = 0 align="center">

     <TR><Td width=80><A HREF="main.htm"><IMG SRC="main.jpg" Border=0></A></Td>
         <Td width=80><A HREF="pass1.htm"><IMG SRC="pass1.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass2.htm"><IMG SRC="pass2.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass3.htm"><IMG SRC="pass3.jpg" Border=0></a></Td>
         <Td width=80><A HREF="pass4.htm"><IMG SRC="pass4.jpg" Border=0></a></Td>
          <Td width=80><A HREF="pass5.htm"><IMG SRC="pass5.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass6.htm"><IMG SRC="pass6.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass7.htm"><IMG SRC="pass7.jpg" Border=0></A></Td>
          <Td width=80><A HREF="pass8.htm"><IMG SRC="pass8.jpg" Border=0></A></Td>
          <Td width=80><a name="<IMG SRC="pass1.jpg"><IMG SRC="pass9.jpg" Border=0></a></Td>
          <Td width=80><A HREF="pass10.htm"><IMG SRC="pass10.jpg" Border=0></A></Td>
     
</TR>
    </TABLE>
<center>
<h3>บทที่ 9 <br>
การแก้ไขข้อผิดพลาดที่เกิดขึ้นภายในโปรแกรม<br>
DEBUGGING THE PROGRAM</H3>
</center>
<dl>
<dt>
<dd><IMG SRC="drosball.gif"><a href="#ขั้นตอนของการทดสอบโปรแกรม">ขั้นตอนของการทดสอบโปรแกรม</a>
<dd><IMG SRC="drosball.gif"><a href="#ประเภทของข้อผิดพลาดที่เกิดขึ้น">ประเภทของข้อผิดพลาดที่เกิดขึ้น</a>
<dd><IMG SRC="drosball.gif"><a href="#Compiler Diagnostic Messages">Compiler Diagnostic Messages</a>
<dd><IMG SRC="drosball.gif"><a href="#ชุดคำสั่งที่ช่วยในการค้นหาข้อผิดพลาด">ชุดคำสั่งที่ช่วยในการค้นหาข้อผิดพลาด</a>
</dl>


<table bgcolor="#ffff00" border=0 width=800>
<tr>
<td>
<font size=+1><b><a name="ขั้นตอนของการทดสอบโปรแกรม">ขั้นตอนของการทดสอบโปรแกรม</a></b></font>
</td>
</tr>
</table>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;เมื่อโปรแกรมเมอร์ทำการเขียนโปรแกรมเสร็จเรียบร้อยแล้วก็จะส่งโปรแกรมเข้าเครื่องคอมพิวเตอร์เพื่อทำการประมวลผล หรือถ้า
หากว่าเขียนลงบนเครื่องคอมพิวเตอร์เลย ก็จะทำการเก็บโปรแกรมที่เขียนขึ้นลงบนสื่อกลางบันทึก เพื่อเก็บ Source Program ที่ได้สร้างขึ้น
เพื่อนำไปทำการประมวลผลในขั้นตอนต่อไป หรือเก็บเอาไว้ใช้งานในคราวต่อไป ต่อจากนั้นก็นำ Source Program ที่เขียนขึ้นไว้แล้วนำมาทำ
การทดสอบว่า โปรแกรมที่ได้เขียนขึ้นนั้น จะสามารถทำงานได้ผลลัพธ์ตามที่ได้กำหนดเอาไว้หรือไม่ โดยจะทำการทดสอบโปรแกรมเป็นลำดับ
ขั้นตอนดังต่อไปนี้</p>
<ol type=1>
<li>Compilation ในขั้นตอนนี้โปรแกรมที่อยู่ภายในหน่วยความจำจะถูก Compiler ตรวจทานประโยคคำสั่งต่าง ๆ ในโปรแกรม
ว่าถูกต้องครบถ้วนตามรูปแบบที่กำหนดไว้ตามรูปแบบการใช้คำสั่งของการเขียนโปรแกรมในภาษา ANSI COBOL หรือไม่ ในที่นี้จะตรวจสอบ
ถึงรูปแบบที่เขียนคำสั่ง และการใช้ภาษาด้วย
<li>Execution เมื่อผ่านขั้นตอนการ Compile แล้ว โดยไม่มีข้อผิดพลาด หรือทำการแก้ไขจนไม่มีข้อผิดพลาดอีกแล้วในขั้นตอน
ของการ Compile ในขั้นตอนต่อไป ก็จะเป็นการทดสอบถึงการทำงานของโปรแกรมว่า จะสามารถประมวลผลเพื่อให้ได้ผลลัพธ์ที่ถูกต้องตาม
ที่ต้องการหรือไม่ โดยในขั้นตอนนี้อาจจะต้องสร้างข้อมูลสมมุติขึ้นมาเพื่อใช้ในการทดสอบขั้นตอนในการหาคำตอบของโปรแกรมว่าได้ผลลัพธ์
ที่ถูกต้องเป็นตามเงื่อนไขหรือจุดประสงค์ที่เราได้วางเอาไว้หรือไม่ เมื่อทำการทดสอบโปรแกรมจนได้ผลลัพธ์ที่ถูกต้อง และจนเป็นที่พอใจแล้ว 
จึงจะถือว่าโปรแกรมนั้นสามารถนำไปใช้งานได้ และนำไปพัฒนาโปรแกรมในโอกาสต่อไป แต่จะอย่างไรก็ตาม โปรแกรมเมอร์ควรตระหนักว่าใน
การทดสอบโปรแกรมนั้น จะใช้ข้อมูลที่ได้สร้างขึ้นเพื่อการทดสอบขั้นตอนการทำงานของโปรแกรม หรืออาจจะใช้ข้อมูลจริงบางส่วนมาทำการ
ทดสอบเท่านั้น ดังนั้นโอกาสที่โปรแกรมที่ผ่านการทดสอบแล้ว จะทำงานผิดพลาดขึ้นได้อีก (Program cancel) ทั้งนี้เพราะข้อผิดพลาดที่อาจ
เกิดขึ้น ในบางกรณีที่ไม่อาจจะทดดสอบ หรือเกิดขึ้นได้ในขณะที่ทำการทดสอบ แต่จะเกิดขึ้นกับการทำงานจริง กับข้อมูลจริง ๆ ซึ่งโปรแกรม
เมอร์อาจจะต้องใช้ความพยายามเป็นอย่างมากในการค้นหาจุดที่ผิดพลาดและทำการแก้ไขโปรแกรมในโอกาสต่อไป
</ol>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>

<table bgcolor="#ffff00" border=0 width=800>
<tr>
<td>
<font size=+1><b><a name="ประเภทของข้อผิดพลาดที่เกิดขึ้น">ประเภทของข้อผิดพลาดที่เกิดขึ้น</a> (types of Errors)</b></font>
</td>
</tr>
</table>
<ol type=1>
<li>ข้อผิดพลาดทางตรรกวิทยา (Logical Errors)
ข้อผิดพลาดประเภทนี้เกิดขึ้นเนื่องจากการทำงานของโปรแกรมผิดขั้นตอนไปจากที่ได้กำหนดไว้ การเลือกตัดสินใจสั่งการผิด
พลาดคือ การเขียนโปรแกรมผิดพลาดไปจากหลักการของเหตุผล ซึ่งในการทดสอบเงื่อนไข ไม่ว่าเงื่อนไขนั้นจะเป็นจริงหรือไม่จริงก็ตาม
คอมพิวเตอร์ก็จะทำงานตามคำสั่งในประโยคคำสั่งที่อยู่ถัดไปทันที และข้อผิดพลาดที่เกิดขึ้นชนิดนี้อาจจะเกิดขึ้นจากกรรมวิธีการประมวลผล
หรือกระบวนการแก้ปัญหา(Algorithm) ซึ่งกระบวนการที่บอกถึงขั้นตอนของการทำงานภายในตัวโปรแกรม (Flowchart) ก็ถือว่าเป็น 
Algorithm ประเภทหนึ่ง ซึ่งถ้าหากการเขียนวิธีการและขั้นตอนในการประมวลผลได้ถูกต้องตามขั้นตอนในเชิงตรรกวิทยา(Logical) แล้วการ
เขียนโปรแกรมให้ทำงานตามขั้นตอนก็จะทำให้โปรแกรมนั้นทำงานได้อย่างถูกต้องตามขั้นตอนด้วย
<li>ข้อผิดพลาดทางหลักภาษาและการใช้คำสั่งผิดรูปแบบ(Syntax Errors)<br>
	ความผิดพลาดนี้อาจเกิดขึ้นเนื่องจากสาเหตุดังต่อไปนี้
<ul>
<li>เขียนประโยคคำสั่งไม่ถูกต้องตามรูปแบบของคำสั่งนั้น ๆ
<li>สะกดคำที่เป็น Reserved Word หรือ Option ผิด
<li>ใช้ชื่อข้อมูลไม่ตรงกับที่ได้กำหนดไว้ใน DATA DIVISION 
<li>ใช้สัญญลักษณ์ที่ไม่มีการกำหนดไว้ในหลักภาษาโคบอล
<li>ตั้งชื่อข้อมูล (Data-name or Idenfifier) ซ้ำกับ Reserved Word
<li>ไม่สามารถหาทางออกจากการทำงานซ้ำ ๆ ให้โปรแกรมได้ (Loop Errors)
</ul>
<li>ข้อผิดพลาดอันเนื่องมาจากข้อมูล (Data Errors)
	ข้อผิดพลาดชนิดนี้มักจะพบเห็นกันอยู่บ่าย ๆ ทั่วไป โปรแกรมส่วนมากจะมีข้อผิดพลาดอันเนื่องมาจาก ข้อไม่ไม่ถูกต้อง ข้อมูลไม่
เป็นไปตามที่กำหนดไว้ภายในตัวโปรแกรม เช่น ข้อมูลที่รับเข้า และส่งออกไม่ตรงกัน ซึ่งข้อมูลบางรายที่ควรเป็นตัวเลข กลับเป็นตัวอักษรหรือ
อักขระพิเศษ ซึ่งจะเป็นสาเหตุที่ทำให้เกิดข้อผิดพลาดนี้ขึ้น เมื่อนำข้อมูลนั้นมาทำการประมวลผล  นอกจากนี้ก็อาจจะมีข้อผิดพลาดที่เกิดจากมี
ข้อมูลที่ซ้ำกัน ข้อมูลถูกเปลี่ยนแปลงหรือขาดหายไป หรือมีจำนวนมากที่กำหนดเอาไว้ภายในโปรแกรม ซึ่งส่วนใหญ่จะเก็บสะสมไปเรื่อย ๆ ไม่มี
การตัดออก
<li>ข้อผิดพลาดที่เกิดจากการสั่งให้ทำงานซ้ำ ๆ (Repitition or Loop Errors)<br>
	ข้อผิดพลาดชนิดนี้อาจจะผิดพลาดอันเนื่องมาจากสาเหตุดังนี้
<li>การกำหนดค่าเริ่มต้น (initial Value) ให้กับตัวแปรไม่ถูกต้อง
<li>เครื่องทำงานซ้ำกันไม่มีที่สิ้นสุด หรือหาทางออกจากการวนซ้ำไม่ได้
<li>เครื่องทำงานตามคำสั่งซ้ำเกินจำนวนครั้งที่ได้กำหนดไว้
<li> กำหนดค่าดัชนีผิด
<li> ชื่อข้อมูลที่กำหนดเป็นตารางหรือเรียกใช้ในรูปแบบของ Array Table น้อยกว่าจำนวนข้อมูลที่เกิดขึ้นจริง
</ul>
<li>ข้อผิดพลาดที่เกิดขึ้นจากคำนวณ (Arithmetic Operation Errors)<br>
	ข้อผิดพลาดนี้เกิดขึ้นได้อันเนื่องมาจากสาเหตุดังต่อไปนี้
<ul>
<li>ข้อมูลที่ถูกนำมาคำนวณต่างชนิดกัน (Mixed Errors)
<li>ตัวหารมีค่าเป็นศูนย์
<li>ถอดรากที่สองของเลขจำนวนเต็บลบหรือจำนวนจริงลบ
<li>กำหนดเนื้อที่ภายในหน่วยความจำ สำหรับใช้เก็บค่าผลลัพธ์ที่ได้จากการคำนวณมีขนาดไม่เพียงพอ (Overflow)
</ul>
<li>ข้อผิดพลาดในเรื่องของการใช้โปรแกรมย่อย (Routines)
	ข้อผิดพลาดชนิดนี้อาจมีสาเหตุเนื่องมาจาก จำนวนตัวแปรไม่เท่ากัน และต่างรูปแบบกัน ในการเขียนหรือเรียกใช้โปรแกรมย่อย
ไม่ถูกต้องตามหลักภาษาโคบอล
<li>ข้อผิดพลาดทางการรับ-ส่งข้อมูล (Input-output Errors)
	ข้อผิดพลาดชนิดนี้อาจจะมีสาเหตุอันเนื่องมาจาก การกำหนด FD (File Description) ไม่เป็นไปตามโครงสร้าง และรูปแบบของ
ข้อมูลที่รับเข้าหรือส่งออก หรือใช้คำสั่งในการนำข้อมูลเข้า เช่น read, addept หรือใช้คำสั่งในการนำข้อมูลออก เช่น write, exhibit,display
ไม่ถูกต้อง หรืออาจจะกำหนด I/O Records ไม่ถูกต้อง
</ol>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>

<table bgcolor="#ffff00" border=0 width=800>
<tr>
<td>
<font size=+1><b><a name="Compiler Diagnostic Messages">Compiler Diagnostic Messages</a></b></font>
</td>
</tr>
</table>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANSI COBOL Compiler ทำหน้าที่ในการตรวจสอบความถูกต้องของโปรแกรมพร้อมทั้งแปลง Code ไปเป็น Object Code 
เพื่อให้คอมพิวเตอร์ทำงาน คอมพิวเตอร์จะบอกที่ผิดของโปรแกรมออกมาเป็นรหัส พร้อมทั้งบรรจัดที่เกี่ยวข้องกับการเขียนคำสั่งผิดพร้อม
ทั้งรายละเอียดอื่น ๆ เมื่อ Compiler ตรวจพบ เพื่อเป็นข้อมูลให้ผู้เขียนโปรแกรมนำมาหาที่ผิด จากหนังสือคู่มือ (COBOL Programmer's
Guide)<br>
	รหัสของความผิดพลาดทางโปรแกรมที่เป็นสาเหตุที่จะทำให้เกิดข้อผิดพลาดได้ 4 ระดับ ดังนี้
<ol type=1>
<li>Warning Level Diagnostics
	เมื่อ Compiler ตรวจสอบความถูกต้องพบว่าโปรแกรมที่ส่งเข้ามานั้นเขียนไม่ถูกต้องตามข้อกำหนดรูปแบบของ Language
Specification ก็จะสั่งให้เครื่องพิมพ์บรรทัดที่ผิดพลาดพร้อมด้วย "W" หรือ Warning Error พร้อมทั้งคำอธิบายสั้น ๆ ออกมา ซึ่งความ
ผิดพลาดเหล่านี้อาจได้แก่ การกำหนดเนื้อที่ยาวหรือสั้นเกินไป การเขียนสะกดคำผิด ซึ่งจะถือว่าเป็นความผิดพลาดเล็ก ๆ น้อย ๆ พอยอมรับได้
ดังนั้นความผิดพลาดในระดับนี้โปรแกรมก็ยังคงทำงานต่อไป เพื่อให้ได้ผลลัพธ์สำเร็จ โปรแกรมเมอร์เองจะแก้ไขหรือไม่แก้ไขก็ได้ต่อความผิด
ประเภทนี้
<li>Conditional Level Diagnostics
	เป็นรหัสที่บอกให้ทราบว่าความผิดพลาดที่เกิดขึ้นภายในโปรแกรมไม่ร้ายแรงนัก Compiler จะสมมุติคำสั่งที่ควรจะเป็น หรือที่เป็น
ไปไม่ได้เพื่อให้โปรแกรมผ่านการ Compile และสามารถ Execute ต่อได้ แต่อย่างไรก็ตามไม่ว่าเป็นความผิดระดับไหน ประเภทไหน ผู้เขียน
โปรแกรมควรจะทำการแก้ไขให้ถูกต้องก่อนที่จะนำ Source Program นั้นไปเข้ารหัสแปลงเป็น Object Code เพื่อทำการ Execute หา
ผลลัพธ์สำเร็จต่อไป และเพื่อการนำโปรแกรมไปใช้อย่างมีประสิทธิภาพต่อไป
<li>Error Level Diagnostics
	ในความผิดพลาดระดับนี้ถือเป็นความผิดขั้นร้านแรงที่สุด ซึ่งเกิดขึ้นในระหว่างการ Compile และ Execute Source Program
อยู่ ความผิดพลาดระดับนี้ได้แก่
<ul>
<li>การเขียนประโยคคำสั่ง (Control Language) ไม่ครบถ้วนถูกต้อง
<li> ประเภทของข้อมูลที่นำมาใช้ในการคำนวณ เป็นชนิดที่ไม่ถูกต้องตามที่ได้กำหนดไว้ใน PICTURE Clause และ USAGE Clause
<li> การทดสอบ และการสั่งการผิดพลาดของผู้เขียนโปรแกรมเอง
<li> การคำนวณของข้อมูลที่เรียกใช้ในรูปของ Array Table ต่าง ๆ ผิดพลาด
</ul>
	ในความผิดพลาดระดับนี้ ผู้เขียนโปรแกรมจะต้องทำการแก้ไขให้ถูกต้อง และทำการ Compile อีกครั้งเพื่อตรวจจากข้อผิดพลาด
อันอาจจะเกิดขึ้นได้อีก จนกว่าความผิดพลาดเหล่านี้จะหมดไป
<li> Dialer Level Diagnostics
	ความผิดพลาดชนิดนี้เกิดจากข้อผิดพลาดของ Compiler เอง ซึ่งอาจจะเกิดขึ้นได้เนื่องจากโปรแกรม Compiler มีบางส่วนเกิด
ความเสียหายขึ้น แต่ก็ยังคงทำงานได้อยู่ แต่ไม่ครบวงจรระบบ ในความผิดชนิดนี้มีโอกาสเกิดขึ้นน้อยมาก หรืออาจจะไม่เกิดขึ้นเลย
</ol>
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>

<table bgcolor="#ffff00" border=0 width=800>
<tr>
<td>
<font size=+1><b><a name="ชุดคำสั่งที่ช่วยในการค้นหาข้อผิดพลาด">ชุดคำสั่งที่ช่วยในการค้นหาข้อผิดพลาด</a></b></font>
</td>
</tr>
</table>
<h3>TRACE Statement</h3>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;เมื่อผู้เขียนโปรแกรมมีความสงสัยลำดับการทำงานของคอมพิวเตอร์ว่าจะทำงานเป็นไปตามขั้นตอนที่แสดงไว้ในผังโปรแกรม
(Flowchart) หรือต้องการติดตามการทำงานอย่างใกล้ชิดทุกขั้นตอน ผู้เขียนโปรแกรมสามารถตรวจสอบได้ด้วยคำสั่ง TRACE โดยเขียน
แทรกลงไปในประโยคคำสั่งที่ต้องการ หรือต้องการที่จะทำการทดสอบ หรือสงสัยว่าจะมีขั้นตอนการทำงานที่ผิดพลาด
<h3>ON Statement</h3>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ในประโยคคำสั่งนี้ทำหน้าที่คล้ายกับประโยคคำสั่ง IF คือ ใช้ทดสอบเงื่อนไขเพื่อสั่งให้คอมพิวเตอร์ทำงานอย่างใดอย่างหนึ่ง ตาม
ประโยคคำสั่งที่ได้กำหนดไว้ หรือสั่งให้ทำประโยคคำสั่งที่อยู่ถัดไป
<h3>EXHIBIT Statement</h3>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ในกรณีที่ต้องการตรวจสอบค่าของตัวแปรต่าง ๆ ว่าผิดไปจากค่าที่ควรจะเป็น ผู้เขียนโปรแกรมอาจสั่งให้คอมพิวเตอร์พิมพ์ค่า
ของตัวแปรเหล่านี้ออกมาให้ดู ซึ่งจะพิมพ์ออกมาเป็นช่วง ๆ หรือพิมพ์ออกมาทุกครั้ง เมื่อค่าของตัวแปรเปลี่ยนไป
<center><a href="#<IMG SRC="top.gif"><IMG SRC="top.gif"></a></center>
</body>

<!-- Mirrored from cptd.chandra.ac.th/selfstud/cobol/pass9.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 16 Nov 2015 19:29:52 GMT -->
</html>
